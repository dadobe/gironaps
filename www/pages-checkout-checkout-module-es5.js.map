{"version":3,"sources":["webpack:///src/app/pages/checkout/checkout.page.scss","webpack:///src/app/pages/checkout/checkout.page.ts","webpack:///src/app/pages/checkout/checkout-routing.module.ts","webpack:///src/app/pages/checkout/checkout.module.ts","webpack:///src/app/pages/checkout/checkout.page.html"],"names":["CheckoutPage","_loadingCtrl","_fb","_authService","_productService","_toastCtrl","_cartService","_router","cart","getCart","subscribe","res","dataForm","group","name","required","zip","street","city","country","stripe","Stripe","stripe_key","elements","card","create","mount","cardElement","nativeElement","addEventListener","error","console","log","cardErrors","message","reduce","i","j","itemPrice","amount","stripeData","payment_method_data","billing_details","get","value","address","line1","postal_code","email","getEmail","receipt_email","items","map","item","id","loading","present","startPaymentIntent","getTotal","paymentIntent","secret","client_secret","handleCardPayment","result","err","dismiss","duration","toast","navigateByUrl","selector","template","routes","path","component","CheckoutPageRoutingModule","imports","forChild","exports","CheckoutPageModule","declarations"],"mappings":"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","file":"pages-checkout-checkout-module-es5.js","sourcesContent":["export default \".StripeElement {\\n  padding: 20px 20px;\\n}\\n\\n.StripeElement--webkit-autofill {\\n  background-color: #fefde5 !important;\\n}\\n\\n#card-errors {\\n  text-align: center;\\n  color: var(--ion-color-danger);\\n  margin: 10px;\\n}\\n\\n.cardField {\\n  background-color: white;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL2NoZWNrb3V0LnBhZ2Uuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLGtCQUFBO0FBQ0Y7O0FBRUE7RUFDRSxvQ0FBQTtBQUNGOztBQUVBO0VBQ0Usa0JBQUE7RUFDQSw4QkFBQTtFQUNBLFlBQUE7QUFDRjs7QUFFQTtFQUNFLHVCQUFBO0FBQ0YiLCJmaWxlIjoiY2hlY2tvdXQucGFnZS5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLlN0cmlwZUVsZW1lbnQge1xuICBwYWRkaW5nOiAyMHB4IDIwcHg7XG59XG4gXG4uU3RyaXBlRWxlbWVudC0td2Via2l0LWF1dG9maWxsIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2ZlZmRlNSAhaW1wb3J0YW50O1xufVxuIFxuI2NhcmQtZXJyb3JzIHtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xuICBjb2xvcjogdmFyKC0taW9uLWNvbG9yLWRhbmdlcik7XG4gIG1hcmdpbjogMTBweDtcbn1cblxuLmNhcmRGaWVsZHtcbiAgYmFja2dyb3VuZC1jb2xvcjogd2hpdGU7XG59Il19 */\";","import { taggedTemplate } from '@angular/compiler/src/output/output_ast';\nimport { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { LoadingController, ToastController } from '@ionic/angular';\nimport { AuthService } from 'src/app/services/auth.service';\nimport { CartService } from 'src/app/services/cart.service';\nimport { ProductService } from 'src/app/services/product.service';\nimport { environment } from 'src/environments/environment';\n\n//Variable for using STRIPE (payments)\ndeclare var Stripe;\n\n@Component({\n  selector: 'app-checkout',\n  templateUrl: './checkout.page.html',\n  styleUrls: ['./checkout.page.scss'],\n})\nexport class CheckoutPage implements OnInit {\n\n  dataForm: FormGroup;\n  cart = [];\n  \n  //Variables for using STRIPE (payments method)\n  stripe;\n  card;\n  cardErrors;\n\n  //Viewchild in order to use the cardElement in the HTML page of the checkout\n  @ViewChild('cardElement', {static: true}) cardElement: ElementRef;\n\n  constructor(\n    private _loadingCtrl: LoadingController,\n    private _fb: FormBuilder,\n    private _authService: AuthService,\n    private _productService: ProductService,\n    private _toastCtrl: ToastController,\n    private _cartService: CartService,\n    private _router: Router\n  ) {}\n \n  ngOnInit() {\n    this._cartService.getCart().subscribe(res => {\n      this.cart = res;\n    });\n \n    this.dataForm = this._fb.group({\n      name: ['Daniel DomÃ­nguez', Validators.required],\n      zip: ['17004', Validators.required],\n      street: ['Avenida Girona', Validators.required],\n      city: ['Girona', Validators.required],\n      country: ['ES', Validators.required]\n    });\n\n    //Stripe Settings, passing the stripe_key which is allocated in the environment file.\n    this.stripe = Stripe(environment.stripe_key);\n    const elements = this.stripe.elements();\n\n    //Card element which captures the input\n    this.card = elements.create('card');\n    this.card.mount(this.cardElement.nativeElement);\n\n    this.card.addEventListener('card changes: ', ({error}) => {\n      console.log('error:', error);\n      this.cardErrors = error && error.message;\n    });\n \n  }\n \n  getTotal() {\n    return this.cart.reduce((i, j) => i + j.itemPrice * j.amount, 0);\n  }\n \n  async buyNow(){\n\n    const stripeData = {\n      payment_method_data: {\n        billing_details: {\n          name: this.dataForm.get('name').value,\n          address: {\n            line1: this.dataForm.get('street').value,\n            city: this.dataForm.get('city').value,\n            postal_code: this.dataForm.get('zip').value,\n            country: this.dataForm.get('country').value\n          },\n          email: this._authService.getEmail()\n        }\n      },\n      receipt_email: this._authService.getEmail()\n    };\n\n    //mapping to get from our cart all the items with id and amount\n    const items = this.cart.map(item => {\n      return {\n        id: item.id,\n        amount: item.amount\n      };\n    })\n\n    //Loading animation after purchase order\n    const loading = await this._loadingCtrl.create();\n    await loading.present();\n\n    // the * 100 is to get the right number in stripe\n    this._productService.startPaymentIntent(this.getTotal() * 100,items)\n    .subscribe(async paymentIntent => {\n    console.log('my payment intent: ', paymentIntent);\n    const secret = paymentIntent.client_secret;\n\n    // This allows us to send the secret which identifies the payment intent, the credit card info and stripe data\n    const {result, err} = await this.stripe.handleCardPayment(\n      secret,\n      this.card,\n      stripeData\n    );\n\n    console.log('Result of handleCardPayment; ', result);\n\n    //error message in case payment could not be Fulfilled, toaster appears for 3 seconds\n    if(err){\n      await loading.dismiss();\n      const toast = await this._toastCtrl.create({\n        message: `Could not process your payment, please try again later`,\n        duration: 3000\n      });\n      await toast.present();\n    } else {\n      await loading.dismiss();\n      const toast = await this._toastCtrl.create({\n        message: `Could not process your payment, please try again later`,\n        duration: 3000\n      });\n      await toast.present();\n      this._router.navigateByUrl('/tabs/tab2');\n    }\n    }, async err => {\n      await loading.dismiss();\n      const toast = await this._toastCtrl.create({\n        message: `Could not process your payment, please try again later`,\n        duration: 3000\n      });\n      await toast.present();\n    });\n  }\n\n}","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { CheckoutPage } from './checkout.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: CheckoutPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class CheckoutPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { CheckoutPageRoutingModule } from './checkout-routing.module';\n\nimport { CheckoutPage } from './checkout.page';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    CheckoutPageRoutingModule,\n    ReactiveFormsModule\n  ],\n  declarations: [CheckoutPage]\n})\nexport class CheckoutPageModule {}\n","export default \"<ion-header>\\n  <ion-toolbar color=\\\"primary\\\">\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-back-button defaultHref=\\\"/tabs/tab2\\\"></ion-back-button>\\n    </ion-buttons>\\n    <ion-title>Checkout</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n \\n<ion-content>\\n \\n  <form [formGroup]=\\\"dataForm\\\" (submit)=\\\"buyNow()\\\">\\n    <ion-item>\\n      <ion-label position=\\\"stacked\\\">Name</ion-label>\\n      <ion-input formControlName=\\\"name\\\"></ion-input>\\n    </ion-item>\\n    <ion-item>\\n      <ion-label position=\\\"stacked\\\">Street</ion-label>\\n      <ion-input formControlName=\\\"street\\\"></ion-input>\\n    </ion-item>\\n    <ion-item>\\n      <ion-label position=\\\"stacked\\\">City</ion-label>\\n      <ion-input formControlName=\\\"city\\\"></ion-input>\\n    </ion-item>\\n    <ion-item>\\n      <ion-label position=\\\"stacked\\\">ZIP</ion-label>\\n      <ion-input formControlName=\\\"zip\\\"></ion-input>\\n    </ion-item>\\n    <ion-item>\\n      <ion-label position=\\\"stacked\\\">Country</ion-label>\\n      <ion-input formControlName=\\\"country\\\"></ion-input>\\n    </ion-item>\\n \\n    <div class=\\\"cardField\\\" #cardElement ></div>\\n \\n    <div id=\\\"card-errors\\\" role=\\\"alert\\\">\\n      {{ cardErrors}}\\n    </div>\\n \\n    <ion-button expand=\\\"full\\\" type=\\\"submit\\\" [disabled]=\\\"!dataForm.valid\\\">Purchase order :  {{ getTotal() | currency:'EUR'}}</ion-button>\\n  </form>\\n \\n</ion-content>\";"]}