{"version":3,"sources":["webpack:///src/app/pages/orders/orders-routing.module.ts","webpack:///src/app/pages/orders/orders.page.ts","webpack:///src/app/pages/orders/orders.page.scss","webpack:///src/app/pages/orders/orders.module.ts","webpack:///src/app/pages/orders/orders.page.html"],"names":["routes","path","component","OrdersPageRoutingModule","imports","forChild","exports","OrdersPage","_productService","_inAppBr","payments","items","getCustomerOrders","subscribe","res","console","log","data","map","item","order","getOrderData","id","pipe","getOneProduct","product","itemName","browser","create","selector","template","OrdersPageModule","declarations"],"mappings":"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","file":"pages-orders-orders-module-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { OrdersPage } from './orders.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: OrdersPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class OrdersPageRoutingModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { tap } from 'rxjs/operators';\nimport { ProductService } from 'src/app/services/product.service';\n\n//Import InAppBrowser needed for openInvoice() function\nimport { InAppBrowser } from '@ionic-native/in-app-browser/ngx';\n\n@Component({\n  selector: 'app-orders',\n  templateUrl: './orders.page.html',\n  styleUrls: ['./orders.page.scss'],\n})\nexport class OrdersPage implements OnInit {\n\n  payments = [];\n  items = {};\n  private _iab: any;\n\n  constructor(\n    private _productService: ProductService,\n    private _inAppBr: InAppBrowser\n  ) { }\n\n  ngOnInit() {\n    this._productService.getCustomerOrders().subscribe( res => {\n      console.log('my orders: ', res);\n      \n      this.payments = res.data;\n      this.payments.map(item => {\n        console.log('item: ', item)\n        item.order = this._productService.getOrderData(item.id).pipe(\n          tap(data => {\n            if(data){\n              console.log('data: ', data);\n              for(let item of data['items']){ //to iterate the collection 'items' from 'orders' in Firebase\n                if(!this.items[item.id]){\n                  this.items[item.id] = {};\n                  this._productService.getOneProduct(item.id).pipe(\n                    tap(product => {\n                      console.log('product: ', product);\n                      this.items[item.id].itemName = product['itemName']; //To reach the id of the item in 'products' collection in Firebase\n                    })\n                  ).subscribe();\n                }\n              }\n            }\n          })\n        )\n        return item\n      });\n    });\n  }\n\n  openInvoice(item){\n    this._productService.getOrderData(item.id).subscribe( res =>{\n      \n      const browser = this._inAppBr.create(res['invoice'], '_system');\n    });\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJvcmRlcnMucGFnZS5zY3NzIn0= */\";","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { OrdersPageRoutingModule } from './orders-routing.module';\n\nimport { OrdersPage } from './orders.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    OrdersPageRoutingModule\n  ],\n  declarations: [OrdersPage]\n})\nexport class OrdersPageModule {}\n","export default \"<ion-header>\\n  <ion-toolbar>\\n    <ion-title>My orders</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n  <ion-list>\\n    <ion-item *ngFor=\\\"let item of payments\\\">\\n      <ion-label class=\\\"ion-text-wrap\\\">\\n        <h2> {{ item.created*1000 | date:'short' }} </h2>\\n        <p> {{ item.amount/100 | currency: 'EUR':'symbol' }} </p>\\n        <div *ngIf=\\\"(item.order | async) as row\\\">\\n          <p> {{ row['status'] }} </p>\\n          <div *ngFor=\\\"let pos of row['items'] \\\">\\n            {{ pos.amount }} x {{ items[pos.id].itemName }}\\n          </div>\\n        </div>\\n      </ion-label>      \\n\\n      <ion-button slot=\\\"end\\\" fill=\\\"clear\\\" (click)=\\\"openInvoice(item)\\\">\\n        <ion-icon slot=\\\"icon-only\\\" name=\\\"download-outline\\\"></ion-icon>\\n      </ion-button>\\n\\n    </ion-item>\\n  </ion-list>\\n\\n</ion-content>\\n\";"]}